BEGIN
    DBMS_OUTPUT.PUT_LINE('SIMPLE IF TEHN END IF');
    IF TRUE THEN
        DBMS_OUTPUT.PUT_LINE('TRUE');
    END IF;
    
    IF TRUE THEN
        DBMS_OUTPUT.PUT_LINE('tRUE');
    ELSE
        DBMS_OUTPUT.PUT_LINE('not true');
    END IF;

    IF TRUE THEN
        DBMS_OUTPUT.PUT_LINE('TRUEE');
    ELSIF TRUE = FALSE THEN
        DBMS_OUTPUT.PUT_LINE('NOT TRUE');
    ELSE
        DBMS_OUTPUT.PUT_LINE('ELSE TRUE');
    END IF;
END;
/

DECLARE
    V_VALUE NUMBER := '1';
BEGIN
    CASE V_VALUE
        WHEN '1' THEN DBMS_OUTPUT.PUT_LINE('ITS 1');
        WHEN '2' THEN DBMS_OUTPUT.PUT_LINE('ITS 2');
        ELSE    DBMS_OUTPUT.PUT_LINE('WHATS IS IT?');
    END CASE;
END;
/
 
 
BEGIN
    DBMS_OUTPUT.PUT_LINE('STATEMENT 1');
    GOTO THIRD;
    
    DBMS_OUTPUT.PUT_LINE('SATTEMENT 2');
    
    <<THIRD>>
    DBMS_OUTPUT.PUT_LINE('STATEMENT 3');

END;
/


-- LABEL TO USE AS A LOOP WITHOUT ACTUAL LOOPS
DECLARE
    V_VARIABLE NUMBER := 1;
BEGIN
    <<FAKE_LOOP>>
    DBMS_OUTPUT.PUT_LINE(V_VARIABLE);
    V_VARIABLE := V_VARIABLE + 1;
    IF V_VARIABLE < 3 THEN GOTO FAKE_LOOP; END IF;
END;
/


-- LIMITATION OF GOTO
BEGIN 
    IF TRUE THEN
        GOTO ELSE_STATMENT;
    ELSE
        <<ELSE_STATMENT>>
        NULL;
    END IF;
END;
-- PLS-00375: illegal GOTO statement; this GOTO cannot branch to label 'ELSE_STATMENT'

